#include <U8g2lib.h>

#define U8X8_HAVE_HW_I2C
U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);

int pin_umiditate = A3;

const uint8_t trist[] = {
  0xF7, 0xB6, 0xFF, 0xFF, 0x3F, 0xD0, 0x55, 0x22, 0x00, 0x00, 0x00, 0x00, 
  0x51, 0x2C, 0xB0, 0xFD, 0xF7, 0xDF, 0xFD, 0xFF, 0x7F, 0x40, 0xA6, 0x49, 
  0x09, 0x00, 0x00, 0x5A, 0x65, 0x04, 0xD0, 0xFB, 0xBD, 0x2F, 0xF7, 0xFF, 
  0x7F, 0x00, 0x5D, 0x52, 0x01, 0x00, 0x00, 0x5A, 0x7A, 0x00, 0xF0, 0xFF, 
  0xBF, 0xFB, 0xFC, 0xFF, 0xBF, 0x00, 0x77, 0x21, 0x08, 0x08, 0x80, 0x24, 
  0x05, 0x00, 0xB4, 0xFF, 0xF9, 0xB3, 0xF7, 0xFF, 0x7F, 0x04, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0xEC, 0xFE, 0xBF, 0xFF, 0x95, 0xFF, 
  0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xA9, 0xFF, 
  0xFE, 0x97, 0xBD, 0xFF, 0x9F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xFA, 0xE7, 0xDD, 0x7B, 0xEB, 0xFF, 0xFF, 0x02, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x95, 0xFD, 0xDE, 0xDB, 0x9B, 0xFF, 
  0x5F, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x20, 0xA9, 0xCD, 
  0xDD, 0xFD, 0x7D, 0xEF, 0x79, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x80, 0x8A, 0x54, 0xF6, 0xEE, 0x99, 0xFE, 0xFB, 0xCF, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xEA, 0xAD, 0xE6, 0xDC, 0x7D, 0xBF, 
  0xBB, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x04, 0x08, 0xB6, 
  0xEF, 0x8D, 0xFD, 0xFE, 0xB7, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x76, 0x44, 0xC9, 0xA9, 0xEE, 0xED, 0xFE, 0x5B, 0x4A, 0x01, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x10, 0x92, 0xFF, 0xFE, 0x5F, 0xF9, 
  0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x88, 0x5A, 
  0xFF, 0xFF, 0xFF, 0x7F, 0x1B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x1F, 0x00, 0x10, 0xA4, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x80, 0x01, 
  0x40, 0x15, 0x00, 0x00, 0x3F, 0x00, 0x98, 0x48, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0x00, 0xD6, 0x01, 0xF0, 0x1A, 0x00, 0x00, 0x3F, 0x00, 0x00, 0xA9, 
  0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xF0, 0xED, 0x00, 0x60, 0xBF, 0x00, 0x00, 
  0x3E, 0x00, 0x00, 0x84, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xF0, 0xFF, 0x02, 
  0xB0, 0xFF, 0x03, 0x04, 0x7E, 0x00, 0x00, 0x30, 0xFF, 0xFF, 0xFF, 0xFF, 
  0x3F, 0xF8, 0xFF, 0x19, 0x40, 0xFF, 0x0F, 0x2A, 0x60, 0x00, 0x00, 0x22, 
  0xFF, 0xEF, 0xFF, 0xFA, 0x1F, 0xFC, 0xFF, 0x67, 0x00, 0xFF, 0xFF, 0x02, 
  0x00, 0x00, 0x00, 0x88, 0xFF, 0xAD, 0x45, 0xF0, 0x3F, 0xF8, 0xFF, 0x53, 
  0x00, 0xFF, 0xBF, 0x28, 0x00, 0x00, 0x00, 0xA0, 0xBF, 0x5F, 0x03, 0xF9, 
  0x1F, 0xE8, 0xFF, 0x2B, 0x88, 0xFF, 0x9F, 0x43, 0x00, 0x00, 0x00, 0x00, 
  0xFF, 0xEB, 0xDD, 0xE4, 0x3F, 0xFE, 0xFF, 0x57, 0x03, 0xFF, 0xDF, 0x04, 
  0x00, 0x01, 0x00, 0x24, 0xFF, 0xC6, 0x8A, 0xE8, 0x3F, 0xEE, 0xFF, 0xA7, 
  0x94, 0xFF, 0xEF, 0x57, 0x00, 0x00, 0x00, 0x81, 0x5F, 0xFA, 0xFF, 0xFF, 
  0x1F, 0xBE, 0xFF, 0x29, 0x00, 0xFF, 0xFF, 0xA5, 0x02, 0x02, 0x00, 0x00, 
  0xFF, 0xDD, 0xFF, 0xFF, 0x3F, 0xFC, 0xFF, 0x53, 0x1B, 0xEF, 0xFF, 0x5F, 
  0x08, 0x00, 0x00, 0x90, 0xAF, 0xFD, 0xFF, 0xFF, 0x1F, 0xFC, 0x9B, 0xD2, 
  0x96, 0x00, 0xFF, 0x97, 0x25, 0x02, 0x00, 0x40, 0x67, 0xE1, 0xFF, 0xFF, 
  0x1F, 0x7F, 0x00, 0xB8, 0x11, 0x80, 0xFE, 0x95, 0x8A, 0x0E, 0x00, 0x04, 
  0x2B, 0x02, 0x04, 0xFB, 0xBF, 0x87, 0x00, 0xD2, 0x2B, 0x00, 0xFA, 0x0B, 
  0x55, 0x05, 0x00, 0x80, 0x8B, 0x54, 0x08, 0xF8, 0x3F, 0x7C, 0x22, 0xFC, 
  0x15, 0x00, 0xFA, 0xF6, 0xAA, 0x04, 0x00, 0x00, 0x4F, 0x00, 0x02, 0xF0, 
  0xFF, 0xBA, 0x04, 0xF9, 0x5F, 0x00, 0x78, 0x55, 0xB5, 0x1E, 0x00, 0x00, 
  0xFF, 0x7B, 0x02, 0xF0, 0xFF, 0xA5, 0x69, 0xFE, 0x7E, 0x55, 0xAB, 0xAA, 
  0x52, 0x76, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xF0, 0x7F, 0xFF, 0xD7, 0xFD, 
  0x7F, 0xAA, 0x66, 0x95, 0x9D, 0x66, 0x00, 0x00, 0x2F, 0xFE, 0xFF, 0xFF, 
  0xFF, 0xDB, 0x7E, 0xFF, 0x7F, 0x9E, 0x96, 0x6A, 0x6A, 0xBD, 0x00, 0x00, 
  0x7F, 0xFE, 0x7F, 0xFF, 0x7F, 0xE6, 0xFF, 0xFB, 0xFF, 0x57, 0x25, 0xA5, 
  0x55, 0xBE, 0x00, 0x00, 0x59, 0x38, 0x5A, 0xFF, 0x7F, 0xBD, 0xFF, 0xFE, 
  0xFF, 0xFF, 0x9F, 0x5A, 0xAA, 0xFB, 0x00, 0x00, 0xC3, 0x81, 0x00, 0xF8, 
  0xFF, 0xEA, 0xFF, 0xFF, 0xFF, 0xDD, 0x9A, 0x65, 0x6A, 0xA5, 0x02, 0x00, 
  0x2D, 0x25, 0x02, 0xFC, 0xFF, 0xB5, 0xFF, 0xFF, 0xFF, 0xBF, 0xD7, 0x94, 
  0xD5, 0xFE, 0x02, 0x00, 0xAF, 0x04, 0x00, 0xFE, 0xFF, 0x8C, 0xFF, 0xFF, 
  0xFF, 0x7F, 0xB5, 0x64, 0x5A, 0xED, 0x03, 0x00, 0x7D, 0x62, 0x00, 0xFE, 
  0xFF, 0xF8, 0xFE, 0xFF, 0xFF, 0xFF, 0x6A, 0x99, 0x99, 0x7B, 0x04, 0x00, 
  0xDE, 0x2F, 0x00, 0xFC, 0xFF, 0xA1, 0xFB, 0xFF, 0xFF, 0x6F, 0x93, 0x02, 
  0x6A, 0x6F, 0x03, 0x00, 0x5A, 0x01, 0x00, 0xFE, 0xFF, 0xA4, 0xFE, 0xFF, 
  0xFF, 0x9B, 0x2E, 0x6D, 0xA4, 0xFD, 0x01, 0x00, 0xDF, 0x04, 0x00, 0xFE, 
  0xFF, 0xD5, 0xEF, 0xDF, 0xFB, 0x9F, 0x5A, 0xA4, 0xE5, 0xB6, 0x0A, 0x00, 
  0x00, 0x13, 0x00, 0xFE, 0xFF, 0x23, 0xFA, 0xFF, 0xFF, 0xFA, 0xA3, 0x59, 
  0xAA, 0xEF, 0x05, 0x00, 0x69, 0x00, 0x00, 0xFF, 0xFF, 0x6F, 0xFD, 0xFF, 
  0xFE, 0x6B, 0xAA, 0xA7, 0xF5, 0x7B, 0x09, 0x00, 0x02, 0x04, 0x00, 0xFF, 
  0xFF, 0x8F, 0xD2, 0xBF, 0xD7, 0xAE, 0x56, 0x8C, 0x6A, 0x9F, 0x0A, 0x00, 
  0x01, 0x00, 0x00, 0xFF, 0xFF, 0x7F, 0xB5, 0xFD, 0xEC, 0xB6, 0x5A, 0x5A, 
  0xFB, 0x7F, 0x15, 0x00, 0x16, 0x00, 0x00, 0xFF, 0xFF, 0x3F, 0x99, 0x97, 
  0xB7, 0x66, 0x65, 0xA1, 0xDC, 0xAB, 0x6A, 0x00, 0x84, 0x00, 0x00, 0xFF, 
  0xFF, 0xFF, 0xE4, 0xB5, 0xD9, 0x9B, 0xB6, 0x95, 0x95, 0x5F, 0x6A, 0x00, 
  0x01, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x4A, 0x6D, 0x26, 0xA6, 0x5B, 0x2A, 
  0xFF, 0x79, 0xD4, 0x01, 0x2C, 0x00, 0x00, 0xFF, 0xFF, 0x3F, 0x54, 0xA6, 
  0xA9, 0xB6, 0x6B, 0xD5, 0xEE, 0x5B, 0x75, 0x01, 0x0B, 0x00, 0x00, 0xFF, 
  0xFF, 0x3F, 0xA8, 0x59, 0x56, 0x9B, 0xB6, 0xAA, 0xF7, 0x9F, 0x5A, 0x01, 
  0x3F, 0x00, 0x80, 0xFF, 0xFF, 0x3F, 0x60, 0xAA, 0xA9, 0x66, 0x69, 0xD3, 
  0xFF, 0xBB, 0xA4, 0x01, 0x3F, 0x00, 0xC0, 0xFF, 0xFF, 0x3F, 0x48, 0x55, 
  0x56, 0xD5, 0x95, 0xFD, 0xBF, 0x6D, 0xD9, 0x03, 0x3F, 0x00, 0x80, 0xFF, 
  0xFF, 0x3F, 0x90, 0xA4, 0x5A, 0x56, 0x95, 0xDA, 0xDF, 0x5E, 0xA0, 0x05, 
  0x1F, 0x00, 0x80, 0xFF, 0xFF, 0x3F, 0x60, 0x59, 0xAD, 0xE6, 0x69, 0xFF, 
  0xFD, 0xB7, 0xDB, 0x1F, 0x80, 0x00, 0xC0, 0xFF, 0xFF, 0x3F, 0x90, 0xAA, 
  0x76, 0xAD, 0xDE, 0xFF, 0x97, 0x27, 0x64, 0x13, 0x8F, 0x00, 0xE0, 0xFF, 
  0xFF, 0x1F, 0x20, 0x55, 0x69, 0xB6, 0xF3, 0xFF, 0xFF, 0x9E, 0x92, 0x0E, 
  0xFF, 0x0E, 0xC0, 0xFF, 0xFF, 0x3F, 0x80, 0xA8, 0xFA, 0x76, 0x7B, 0x77, 
  0xDF, 0x3D, 0xDB, 0x37, 0xFF, 0xFF, 0xC8, 0xFF, 0xFF, 0x3F, 0x60, 0x56, 
  0xA9, 0xED, 0xED, 0xFF, 0xFF, 0xC7, 0xA4, 0x5C, 0xFF, 0xFF, 0xFE, 0xFF, 
  0xFF, 0x7F, 0xA0, 0xAB, 0xBE, 0xDF, 0xFF, 0xFF, 0x96, 0x55, 0x99, 0xA9, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x50, 0x55, 0xE5, 0x79, 0xFB, 0xFF, 
  0xFF, 0xAD, 0xA4, 0x36, };


const uint8_t fericit[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1A, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xB4, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xF2, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xFF, 0xFD, 0x3F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 
  0xC7, 0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0xF9, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x01, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x80, 0xFE, 0xFF, 0xCF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8C, 0x01, 0xFE, 
  0xEF, 0xC1, 0xC4, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x84, 0xFF, 0x37, 0x82, 0x00, 0xC4, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 
  0x00, 0x00, 0x00, 0x00, 0x20, 0x8C, 0x3B, 0x06, 0x82, 0x00, 0xE4, 0xDF, 
  0xFF, 0xDF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x80, 0x7E, 0x84, 0x11, 0x04, 
  0x02, 0x89, 0xE4, 0xFF, 0xFF, 0x7F, 0xBF, 0x03, 0x00, 0x00, 0x00, 0xC0, 
  0x3F, 0x8C, 0x08, 0x00, 0x10, 0x88, 0xE0, 0xFF, 0x7F, 0xFF, 0xE7, 0x03, 
  0x00, 0x00, 0x00, 0xF0, 0x3F, 0x88, 0x89, 0x88, 0x13, 0x89, 0xE0, 0xF7, 
  0xFF, 0xFF, 0xF7, 0x01, 0x00, 0x00, 0x00, 0xF0, 0x7F, 0xC4, 0x80, 0x9C, 
  0x11, 0x88, 0xF0, 0xFF, 0xFF, 0xFF, 0xFD, 0x00, 0x00, 0x00, 0x00, 0xE0, 
  0x7F, 0x80, 0x89, 0x9F, 0x91, 0xC1, 0xF0, 0xFF, 0xFF, 0xFF, 0xFA, 0x00, 
  0x00, 0x00, 0x00, 0xE0, 0x7F, 0xC4, 0xC0, 0x8F, 0x11, 0xC0, 0xF1, 0xFF, 
  0xFF, 0xA7, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x7F, 0xC8, 0x81, 0x9F, 
  0x11, 0xC1, 0xF1, 0xFF, 0xFB, 0xE7, 0x7F, 0x00, 0x00, 0x00, 0x00, 0xE0, 
  0x7F, 0xC0, 0xC0, 0x8C, 0x11, 0xC8, 0xF1, 0xFF, 0xFF, 0xFE, 0x3F, 0x00, 
  0x00, 0x00, 0x00, 0xE0, 0x7F, 0xC0, 0x81, 0x98, 0x11, 0x89, 0xF1, 0xFF, 
  0xFF, 0xFF, 0x3F, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x77, 0xC0, 0x80, 0x9C, 
  0x83, 0x89, 0xF1, 0xBF, 0x9F, 0xDF, 0x1F, 0x00, 0x00, 0x00, 0x00, 0xE0, 
  0xFF, 0xC0, 0x09, 0x8C, 0xC1, 0x99, 0xF7, 0xFF, 0xFB, 0xFF, 0x1F, 0x00, 
  0x00, 0x00, 0x00, 0xF0, 0x7F, 0xC0, 0x08, 0x9E, 0xC7, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x03, 0xE0, 0x7F, 0xC0, 0x19, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x00, 0x00, 0x10, 0xE0, 0xE0, 
  0xFF, 0xC0, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFB, 0xFF, 0xFF, 0x07, 0x00, 
  0x00, 0x90, 0x64, 0xE8, 0xFF, 0xFA, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFD, 0xFF, 0x07, 0x00, 0x00, 0x02, 0xFC, 0xE0, 0xFF, 0xFF, 0x1F, 0xE0, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x7C, 0xE0, 
  0xFF, 0xFF, 0x0F, 0xE8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 
  0x00, 0x11, 0xFF, 0xE4, 0xFF, 0xBF, 0x1F, 0xC0, 0xFF, 0xFF, 0xFF, 0xC7, 
  0xFF, 0xFF, 0x01, 0x00, 0x00, 0x6A, 0x7F, 0xE1, 0xFF, 0xFF, 0x1F, 0xC0, 
  0xFF, 0x7F, 0xCE, 0xC1, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x30, 0xFF, 0xE0, 
  0xFF, 0xFF, 0x0F, 0xC2, 0xFB, 0x03, 0x8C, 0xC1, 0xFF, 0xFF, 0x00, 0x00, 
  0x00, 0xB6, 0xFE, 0xE0, 0xFF, 0xFF, 0x0F, 0xC3, 0x10, 0x22, 0x8C, 0xC1, 
  0xFF, 0xFF, 0x00, 0x00, 0x00, 0x31, 0x79, 0xE0, 0xFF, 0xFE, 0x1F, 0x43, 
  0x20, 0x32, 0xCC, 0xF1, 0xEF, 0x7F, 0x00, 0x00, 0x00, 0xB4, 0xFC, 0xCB, 
  0xFF, 0xFF, 0x1F, 0x42, 0x20, 0x12, 0xCC, 0xF1, 0xFF, 0x3F, 0x00, 0x00, 
  0x00, 0x00, 0x79, 0xE0, 0xBF, 0xFF, 0x0F, 0x43, 0x62, 0x30, 0xCC, 0xE1, 
  0xFF, 0x3F, 0x00, 0x00, 0x00, 0x04, 0xFC, 0xC6, 0xFF, 0xFF, 0x1F, 0x61, 
  0x26, 0x10, 0x8C, 0xC1, 0xFB, 0x3F, 0x00, 0x00, 0x00, 0xA1, 0xFE, 0xF0, 
  0xFB, 0xFF, 0x0F, 0x20, 0x62, 0x98, 0xCC, 0xE1, 0xFF, 0x1F, 0x00, 0x00, 
  0x00, 0x22, 0xFE, 0xC4, 0xFF, 0xFF, 0x1D, 0x30, 0x62, 0x98, 0xCC, 0xF1, 
  0xFF, 0x0F, 0x00, 0x00, 0x00, 0xB8, 0xFF, 0xE2, 0xFF, 0xEF, 0x0F, 0x30, 
  0x62, 0x98, 0xC8, 0xF1, 0xFF, 0x0F, 0x00, 0x00, 0x00, 0x64, 0xFF, 0xE8, 
  0xFF, 0xFF, 0x0F, 0x20, 0x62, 0x18, 0x88, 0xC1, 0xFF, 0x07, 0x00, 0x00, 
  0x00, 0xA2, 0xFF, 0xE1, 0xFF, 0xFF, 0x1F, 0x61, 0xE2, 0x08, 0x08, 0xC0, 
  0xFF, 0x07, 0x00, 0x00, 0x00, 0xFF, 0xF7, 0xCA, 0xFF, 0xFF, 0x0F, 0x21, 
  0xE2, 0x8C, 0x08, 0xC0, 0xFF, 0x07, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xE0, 
  0xBF, 0xFF, 0x1F, 0x62, 0xF0, 0xCC, 0x28, 0xFF, 0xEF, 0x03, 0x00, 0x00, 
  0x00, 0x9F, 0xFF, 0xF8, 0xFF, 0xFF, 0x0F, 0x43, 0xF0, 0xFC, 0xFF, 0xFF, 
  0xFF, 0x01, 0x00, 0x00, 0x80, 0xFB, 0x7F, 0xFF, 0xFF, 0xFF, 0x1B, 0xC3, 
  0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0xC0, 0xFE, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xBF, 0xEB, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 
  0xC0, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0x00, 0x00, 0x00, 0xA0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFE, 0xFF, 
  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x02, 0x00, 0x00, 0x00, 0x00, 
  0xE8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x5F, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF, 
  0x17, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 0xFF, 
  0xF7, 0xFF, 0xBF, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xE0, 0xFF, 0xFF, 0xFF, 0xF1, 0x5F, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0xFF, 0x7F, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xFF, 0xFF, 0x0D, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0xE0, 0x7F, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x40, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, };


void setup() {
    u8g2.begin();
}

void loop() {
    // ================ afisarea umiditatii solului ================
    u8g2.clearBuffer();

    // <--- determinarea umiditatii solului -->
    int umiditate_sol = analogRead(pin_umiditate);

    // <--- afisarea pe display -->
    if (umiditate_sol > 400) {
        u8g2.drawXBM(0, 0, 128, 64, trist);
    } else {
        u8g2.drawXBM(0, 0, 128, 64, fericit);
    }

    u8g2.sendBuffer();

}